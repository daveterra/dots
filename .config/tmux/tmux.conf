
# Reasonable prefix
set -g prefix C-a
unbind-key C-a
bind-key C-a send-prefix

set-option -g history-limit 50000

# Use vim keybindings in copy mode
setw -g mode-keys vi
set -g focus-events on
set -g status-position top

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Vim-like splits
bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R

# Change the split commands
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind w command-prompt -I "new-window -n \""
unbind '"'
unbind %

# Shift arrow to switch windows
bind -n C-Left  previous-window
bind -n C-Right next-window

bind -n S-Left resize-pane -L 5
bind -n S-Right resize-pane -R 5
bind -n S-Up resize-pane -U 5
bind -n S-Down resize-pane -D 5

bind -n C-S-Left send-keys "tmux resize-pane -x (math '10 + round 100 *' (tmux display-message -p '#{pane_width}/#{window_width}'))%" Enter
bind -n C-S-Left resize-pane -x 50%
bind -n C-S-Right resize-pane -x 33%
bind -n C-S-Up resize-pane -y 50%
bind -n C-S-Down resize-pane -y 33%

# No delay for escape key press
set -sg escape-time 0

# Mouse navigation and resizing
set -g mouse on

# Start window/pane numbering at 1
set -g base-index 1
setw -g pane-base-index 1
set-option -g renumber-windows on

# Monitor and show activity
setw -g monitor-activity on
set -g visual-activity on

set -g status-keys vi

###############################################################################
# Plugins
###############################################################################
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.local/share/tmux/plugins'
set -g @plugin 'tmux-plugins/tpm'

# Resurrect plugin
set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @resurrect-strategy-vim 'session' # for vim
set -g @resurrect-strategy-nvim 'session' # for neovim
set -g @resurrect-processes 'ssh psql mysql sqlite3'

# Continuum
set -g @plugin 'tmux-plugins/tmux-continuum'

# Tab thing
set -g @plugin 'laktak/extrakto'
set -g @extrakto_popup_size "75%"
set -g @extrakto_filter_order "line "

set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @cpu_percentage_format "%5.1f%%"
set -g @ram_percentage_format "%5.1f%%"

set -g @plugin 'aaronpowell/tmux-weather'
# Format : https://github.com/chubin/wttr.in
set -g @forecast-format '%l+::+ÓÇª+%c+%C+ÓÇª+%t+%w+%h+ÓÇª+üåû+%S+%m+%s'
# WEATHER='#(curl -s wttr.in/London:Stockholm:Moscow\?format\="%%l:+%%c%%20%%t%%60%%w&period=60")'

###############################################################################
# Theme, visuals
###############################################################################
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

fs="ÓÇª"
li="ÓÇ∫"
lo="ÓÇº"
ar="ÓÇ±"
arl="ÓÇ≥"
arf="ÓÇ∞"
arfl="ÓÇ≤"
emd="‚Äî"
symbols="ÓàÄ Ôüæ Ô°Å Ô°õ Ô££  Ôñ¥ ÔâÜ  ÔôÄÔôÅ   Ô°ù Ô°û ÓÉÑÓÉÖ  ÓÇºÓÇ∫  Ô†§ ÓÇ∂ ÓÇ¥"

# Pane border settings
relpath="#{s|$HOME|~|:pane_current_path}"
format="#{?pane_active,#[bold],#[dim]}#[bg=terminal]"
format="${format}#{?pane_active,#[fg=green],#[fg=terminal]}"
format="${format}ÓÇ≤"
format="${format}#{?pane_active,#[bg=magenta],#[bg=white]}#[reverse]"
format="${format}#{?pane_active,#[fg=green],#[fg=terminal]}"
format="${format} #{pane_index} "
format="${format}#[bg=terminal]ÓÇ± ${relpath} ÓÇ± "
format="${format}#{pane_current_command} #[noreverse]"
format="${format}ÓÇ∞"
set -g pane-border-lines heavy
set -g pane-border-status top
set -g pane-border-format $format
set -g pane-border-style fg=brightblack,bg=terminal
set -g pane-active-border-style fg=green,bg=terminal

# Status and messages
set -g clock-mode-colour cyan

set -g mode-style bg=brightcyan,fg=terminal

# status line
set -ug status-format
set -g status-style bg=terminal,fg=green
set -g status-justify left
set -g status-interval 20
set -g status 3
set -g status-left ''
set -g status-left-length 200
set -g status-right ''
set -g status-right-length 200

# Left hand side of status bar
# num_sessions="#(tmux ls | wc -l | xargs)"
relpath="#{s|$HOME|~|:session_path}"
# Display uptime alerts:
uptime="#(~/.local/bin/uptime | grep -c 0)"
format=""
set -ag status-left "#[bg=red,fg=terminal]#{?$uptime, !! DOWN ($uptime) !! ,}"
set -ag status-left "#[default]ÓÇ∂#[reverse] #h ÓÇ± #S ÓÇ± "
set -ag status-left "${relpath} "
set -ag status-left "#[default,italics]ÓÇº %a %b %d ${fs} %H:%M "

################################# Email stuff #################################
format="${format}#[fg=green,bg=terminal,bold]#[reverse]${lo} "
# checking="#(ls -1 /tmp/lockdir/fetchmail.lock | wc -l | xargs)"
checking="#(test -f /tmp/lockdir/fetchmail.lock && echo 1 || echo 0)"
mail1="#(~/code/email/get-count H)"
mail2="#(~/code/email/get-count G)"
mail3="#(~/code/email/get-count W)"
anymail="#{||:$mail2,$mail3}"
anymail="#{||:$mail1,$anymail}"
format="${format}#{?$anymail,ÔõØ,}"
format="${format}#{?$checking, ‚¨á,}"
format="${format}#{?$mail1, ${ar} H: $mail1,}"
format="${format}#{?$mail2, ${ar} G: $mail2,}"
format="${format}#{?$mail3, ${ar} W: $mail3,}"

################################ Weather things ###############################
# weather='#(~/.tmux/plugins/tmux-weather/scripts/forecast.sh | sed 's/,.*:://g')'
weather=""
format="${format} ${li}#[default]${weather} "
year_perc="#(echo $((`date "+%j"` * 100 / 365)))"
# year_perc="#(math "$((date "+%j")) * 100 / 365)""
year_perc="#(fish -c 'math -s 1 \"$(date \"+%j\") * 100 /365\"')"
weeks_perc="Weeks: %U/52"
format="${format}${year_perc}%% Days: %j/365 "

################################# CPU stuff ###################################
format="${format}#[bg=terminal]#{cpu_fg_color}#[reverse]${lo}#[noreverse]"
format="${format}#[fg=terminal]#{cpu_bg_color}#{cpu_icon}#{cpu_percentage}"
format="${format} #{cpu_fg_color}#{ram_bg_color}ÓÇ∞#[fg=terminal]"
format="${format}#{ram_bg_color} #{ram_icon}#{ram_percentage}"
format="${format}#{ram_fg_color}#[bg=terminal]ÓÇ¥"
set -g status-right $format
format=""

# Second part of status line 1, window list/menu
format="#{?window_activity_flag,#[none],#[dim]}#[bg=terminal,fg=magenta,dim] #I"
format="${format} ${fs}#[fg=green] #W #{?window_bell_flag,ÓÄâ,}#F"
setw -g window-status-separator ''
setw -g window-status-format $format
setw -g window-status-style italics
format="#[fg=magenta, bg=terminal, reverse]ÓÇº #I "
format="${format}#[bg=green,fg=magenta,noreverse]ÓÇº"
format="${format}#[fg=green,bg=terminal,reverse] #W ${fs}#F#[noreverse]ÓÇº"
setw -g window-status-current-format $format
setw -g window-status-current-style italics,bold

# Status line 2
# https://stackoverflow.com/questions/56304794/tmux-using-the-status-options-on-multiple-status-lines
# Add a border
set -g status-format[1] "" #  ‚ñî #[bold,reverse]‚ñà" # ‚Äæ
# set -Fg status-format[1] "#{status-format[0]}"
# set -Fg status-format[0] ""
# format="${emd}${emd}${emd}${emd}${emd}${emd}${emd}${emd}${emd}${emd}${emd}${emd}"
# format="${format}${format}${format}${format}${format}${format}${format}"
# format="#[bg=black,fg=white]${format}${format}${format}${format}${format}"

# set -g status-format[2] "#[norange fg=terminal,bg=white,fill]${emd}#{p10:emd}"

# messaging
set -g message-style bg=terminal,fg=green
set -g message-command-style bg=black,fg=blue
set -g display-time 10000

# loud or quiet?
set -g visual-activity on
set -g visual-bell on
set -g visual-silence both
set -g bell-action current
setw -g monitor-bell on
setw -g monitor-activity on
setw -g monitor-silence 0

set -g window-style 'fg=grey,bg=terminal'
set -g window-active-style 'fg=terminal,bg=terminal'

display-message "Config loaded"
# Plugin manager
run '~/.local/share/tmux/plugins/tpm/tpm'
# vim:syntax=tmux
